<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Engili's Blog]]></title>
  <link href="http://engili.github.io/atom.xml" rel="self"/>
  <link href="http://engili.github.io/"/>
  <updated>2018-03-30T22:50:02+08:00</updated>
  <id>http://engili.github.io/</id>
  <author>
    <name><![CDATA[engili]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CoreAnimation Notes]]></title>
    <link href="http://engili.github.io/blog/2018/03/30/coreanimation-notes/"/>
    <updated>2018-03-30T22:47:33+08:00</updated>
    <id>http://engili.github.io/blog/2018/03/30/coreanimation-notes</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>CoreAnimation</h1>

<p><code>CoreAnimation</code>将视图转换为<code>位图</code>，可以直接在<code>GPU</code>上操作，实现动画效果</p>

<h1>CALayer (Model Object)</h1>

<ul>
<li>Model Objcet</li>
<li>主要管理<code>位图</code>数据信息，位图内容可以是View绘制也可以是设置的图片</li>
<li>大多数Layer不进行绘制，只是将View的内容换成为位图</li>
</ul>


<h1>CALayer 坐标</h1>

<h2>point-based 坐标系统</h2>

<ul>
<li>基于屏幕坐标系统，可以表示layer之间的关系</li>
<li><code>bounds</code>和<code>position</code>属性</li>
</ul>


<h2>unit 坐标系统</h2>

<ul>
<li>和屏幕坐标系统无关</li>
<li><code>anchorPoint</code>

<ul>
<li>默认值是（0.5.0.5） 取值范围 0 - 1</li>
<li>影响<code>position</code>属性

<ul>
<li>当anchorPoint为（0，0）时，<code>position</code>在layer左上角</li>
<li>当anchorPoint为（1，1）时，<code>position</code>在layer右下角</li>
<li>当anchorPoint为（0.5，0.5）时，<code>position</code>在layer中心</li>
</ul>
</li>
<li>影响旋转<code>transform</code>的中心点</li>
</ul>
</li>
</ul>


<h1>Layer Trees</h1>

<ul>
<li>Objects in the model layer tree (or simply “layer tree”) are the ones your app interacts with the most. The objects in this tree are the model objects that store the target values for any animations. Whenever you change the property of a layer, you use one of these objects.</li>
<li><p>Objects in the presentation tree contain the in-flight values for any running animations. Whereas the layer tree objects contain the target values for an animation, the objects in the presentation tree reflect the current values as they appear onscreen. You should never modify the objects in this tree. Instead, you use these objects to read current animation values, perhaps to create a new animation starting at those values.</p>

<pre><code class="``">  func presentation() -&gt; Self?
</code></pre>

<p>   a copy of the presentation layer object that represents the state of the layer as it currently appears onscreen.
   The sublayers, mask, and superlayer properties of the returned layer return the corresponding objects from the presentation tree</p></li>
<li><p>Objects in the render tree perform the actual animations and are private to Core Animation.</p></li>
</ul>


<h1>Changing the Layer Class Used by UIView</h1>

<ul>
<li>override the layerClass method and return the class object you want to use instead.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="kr">override</span> <span class="k">class</span> <span class="k">var</span> <span class="nl">layerClass</span><span class="p">:</span> <span class="n">Swift</span><span class="p">.</span><span class="n">AnyClass</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">CAGradientLayer</span><span class="p">.</span><span class="nb">self</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CALayer subclasses</h1>

<ul>
<li>CAEmitterLayer</li>
</ul>


<p>Used to implement a Core Animation–based particle emitter system. The emitter layer object controls the generation of the particles and their origin.</p>

<ul>
<li>CAGradientLayer</li>
</ul>


<p>Used to draw a color gradient that fills the shape of the layer (within the bounds of any rounded corners).</p>

<ul>
<li>CAMetalLayer</li>
</ul>


<p>Used to set up and vend drawable textures for rendering layer content using Metal.</p>

<ul>
<li>CAEAGLLayer/CAOpenGLLayer</li>
</ul>


<p>Used to set up the backing store and context for rendering layer content using OpenGL ES (iOS) or OpenGL (OS X).</p>

<ul>
<li>CAReplicatorLayer</li>
</ul>


<p>Used when you want to make copies of one or more sublayers automatically. The replicator makes the copies for you and uses the properties you specify to alter the appearance or attributes of the copies.</p>

<ul>
<li>CAScrollLayer</li>
</ul>


<p>Used to manage a large scrollable area composed of multiple sublayers.</p>

<ul>
<li>CAShapeLayer</li>
</ul>


<p>Used to draw a cubic Bezier spline. Shape layers are advantageous for drawing path-based shapes because they always result in a crisp path, as opposed to a path you draw into a layer’s backing store, which would not look as good when scaled. However, the crisp results do involve rendering the shape on the main thread and caching the results.</p>

<ul>
<li>CATextLayer</li>
</ul>


<p>Used to render a plain or attributed string of text.</p>

<ul>
<li>CATiledLayer</li>
</ul>


<p>Used to manage a large image that can be divided into smaller tiles and rendered individually with support for zooming in and out of the content.</p>

<ul>
<li>CATransformLayer</li>
</ul>


<p>Used to render a true 3D layer hierarchy, rather than the flattened layer hierarchy implemented by other layer classes.</p>

<ul>
<li>QCCompositionLayer</li>
</ul>


<p>Used to render a Quartz Composer composition. (OS X only)</p>

<h1>设置Layer content</h1>

<p>A layer’s content consists of a bitmap containing the visual data you want to display. You can provide the content for that bitmap in one of three ways:</p>

<ul>
<li>Assign an image object directly to the layer object’s contents property. (This technique is best for layer content that never, or rarely, changes.)</li>
<li>Assign a delegate object to the layer and let the delegate draw the layer’s content. (This technique is best for layer content that might change periodically and can be provided by an external object, such as a view.)</li>
<li>Define a layer subclass and override one of its drawing methods to provide the layer contents yourself.(This technique is appropriate if you have to create a custom layer subclass anyway or if you want to change the fundamental drawing behavior of the layer.)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIKit Animations 学习笔记]]></title>
    <link href="http://engili.github.io/blog/2018/03/24/uikit-animations-note/"/>
    <updated>2018-03-24T21:33:06+08:00</updated>
    <id>http://engili.github.io/blog/2018/03/24/uikit-animations-note</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>UIView 可动画属性 (Animatable Property)</h3>

<ul>
<li>frame

<ul>
<li>当<code>transform</code> 属性不为<code>identity</code>时，<code>frame</code>是未定义的，使用<code>bounds</code>或<code>center</code>做动画</li>
</ul>
</li>
<li>bounds</li>
<li>center</li>
<li>transform</li>
<li>alpha</li>
<li>backgroundColor</li>
<li><del>contentStretch</del> (iOS 7.0弃用）

<ul>
<li><del>Modify this property to change the way the view’s contents are stretched to fill the available space.</del></li>
</ul>
</li>
</ul>


<h5>注：改变某个正在进行的动画的属性的值，并不会打断动画，而是动画继续执行，并且最终态到你设置的那个值</h5>

<h3>Animations Block-Based Methods</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="k">func</span> <span class="n">animate</span><span class="p">(</span><span class="n">withDuration</span> <span class="nl">duration</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">@</span><span class="n">escaping</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>这个方法使用<code>curveEaseInOut</code>和<code>transitionNone</code>选项，动画期间动画的View不响应用户交互</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="k">func</span> <span class="n">animate</span><span class="p">(</span><span class="n">withDuration</span> <span class="nl">duration</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">@</span><span class="n">escaping</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">,</span> <span class="nl">completion</span><span class="p">:</span> <span class="p">((</span><span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>completion</code>,如果<code>duration</code>值是0，block会在下一个<code>runloop cycle</code>被调用</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="k">func</span> <span class="n">animate</span><span class="p">(</span><span class="n">withDuration</span> <span class="nl">duration</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">delay</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="n">UIViewAnimationOptions</span> <span class="o">=</span> <span class="p">[],</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">@</span><span class="n">escaping</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">,</span> <span class="nl">completion</span><span class="p">:</span> <span class="p">((</span><span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>options</code> 可以设置一个或者多个，以数组的形式</li>
</ul>


<h4>UIViewAnimationOptions</h4>

<h5>常规属性（可以设置多个）</h5>

<ul>
<li>layoutSubviews

<ul>
<li>layout子View，让他们随父view一起动画</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span>必须重写view的LayoutSubViews方法</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">//  MTAnimateView.swift</span>
</span><span class='line'><span class="k">class</span> <span class="nl">MTAnimateView</span><span class="p">:</span> <span class="bp">UIView</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">subview</span><span class="p">:</span> <span class="bp">UIView</span><span class="o">!</span>
</span><span class='line'>    <span class="kr">override</span> <span class="k">func</span> <span class="n">layoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">bounds</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">subview</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="bp">CGRect</span><span class="p">(</span><span class="nl">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">width</span><span class="p">:</span> <span class="n">bounds</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="nl">height</span><span class="p">:</span> <span class="n">bounds</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//UIViewController.swift</span>
</span><span class='line'><span class="k">class</span> <span class="nl">ViewController</span><span class="p">:</span> <span class="bp">UIViewController</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">redView</span><span class="p">:</span> <span class="n">MTAnimateView</span><span class="o">!</span>
</span><span class='line'>    <span class="c1">//动画block 扩大bounds，长宽各100，不带`layoutSubviews` 动画效果就很奇怪</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">animateWithLayoutSubViews</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">orginBounds</span> <span class="o">=</span> <span class="n">redView</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="bp">UIView</span><span class="p">.</span><span class="n">animate</span><span class="p">(</span><span class="nl">withDuration</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span> <span class="nl">delay</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">.</span><span class="n">layoutSubviews</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">redView</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="bp">CGRect</span><span class="p">(</span><span class="nl">x</span><span class="p">:</span> <span class="n">orginBounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="nl">y</span><span class="p">:</span> <span class="n">orginBounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="nl">width</span><span class="p">:</span> <span class="n">orginBounds</span><span class="p">.</span><span class="n">width</span> <span class="o">+</span> <span class="mi">100</span><span class="p">,</span> <span class="nl">height</span><span class="p">:</span> <span class="n">orginBounds</span><span class="p">.</span><span class="n">height</span> <span class="o">+</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>        <span class="p">})</span> <span class="p">{</span> <span class="p">(</span><span class="n">_</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">redView</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">orginBounds</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>allowUserInteraction

<ul>
<li>响应动画时的用户交互</li>
</ul>
</li>
<li><p>beginFromCurrentState</p>

<blockquote><p>If this key is not present, all in-flight animations are allowed to finish before the new animation is started. If another animation is not in flight, this key has no effect.</p></blockquote></li>
<li><p>`repeat`</p>

<ul>
<li>重复动画</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIView</span><span class="p">.</span><span class="n">animate</span><span class="p">(</span><span class="nl">withDuration</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nl">delay</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">.</span><span class="n">repeat</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">//重复执行3次</span>
</span><span class='line'>            <span class="bp">UIView</span><span class="p">.</span><span class="n">setAnimationRepeatCount</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>            <span class="p">...</span>
</span><span class='line'>        <span class="p">},</span> <span class="nl">completion</span><span class="p">:</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>autoreverse

<ul>
<li>与<code>repeat</code>配合使用，动画能回溯</li>
</ul>
</li>
<li>overrideInheritedDuration

<ul>
<li>忽略嵌套动画的时间,使用自己设置的<code>duration</code></li>
</ul>
</li>
<li>overrideInheritedCurve

<ul>
<li>忽略嵌套动画的时间曲线，使用自己设置的时间曲线</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span>嵌套动画</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIView</span><span class="p">.</span><span class="n">animate</span><span class="p">(</span><span class="nl">withDuration</span><span class="p">:</span> <span class="mf">2.0</span><span class="p">,</span> <span class="nl">delay</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">.</span><span class="n">curveEaseIn</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">redView</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">redViewNewCenter</span>
</span><span class='line'>        <span class="bp">UIView</span><span class="p">.</span><span class="n">animate</span><span class="p">(</span><span class="nl">withDuration</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nl">delay</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">[.</span><span class="n">curveEaseOut</span><span class="p">,</span> <span class="p">.</span><span class="n">overrideInheritedDuration</span><span class="p">,</span> <span class="p">.</span><span class="n">overrideInheritedCurve</span><span class="p">],</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">blueView</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">blueViewNewCenter</span>
</span><span class='line'>        <span class="p">},</span> <span class="nl">completion</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">_</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">blueView</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">blueViewOriginalCenter</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>    <span class="p">})</span> <span class="p">{</span> <span class="p">(</span><span class="n">_</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">redView</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">redViewOriginalCenter</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>allowAnimatedContent

<ul>
<li>动画的时候，重绘View，没设置这个选项的时候，动画都是使用的截图</li>
</ul>
</li>
<li>showHideTransitionViews

<ul>
<li>用于转场动画</li>
</ul>
</li>
</ul>


<blockquote><p>When present, this key causes views to be hidden or shown (instead of removed or added) when performing a view transition. Both views must already be present in the parent view’s hierarchy when using this key. If this key is not present, the to-view in a transition is added to, and the from-view is removed from, the parent view’s list of subviews.</p></blockquote>

<ul>
<li>overrideInheritedOptions</li>
</ul>


<h5>速度属性 （可以设置一个）</h5>

<ul>
<li>curveEaseInOut

<ul>
<li>开始慢，中间加速，结尾慢</li>
</ul>
</li>
<li>curveEaseIn

<ul>
<li>开始慢，一直加速</li>
</ul>
</li>
<li>curveEaseOut

<ul>
<li>开始快，一直减速</li>
</ul>
</li>
<li>curveLinear

<ul>
<li>均匀的</li>
</ul>
</li>
</ul>


<h5>转场动画属性 （可以设置一个）</h5>

<ul>
<li>transitionFlipFromLeft</li>
<li>transitionFlipFromRight</li>
<li>transitionCurlUp</li>
<li>transitionCurlDown</li>
<li>transitionCrossDissolve</li>
<li>transitionFlipFromTop</li>
<li>transitionFlipFromBottom</li>
<li>preferredFramesPerSecond30</li>
<li>preferredFramesPerSecond60</li>
</ul>


<h3>嵌套动画</h3>

<p>嵌套动画，是嵌套在其他动画block中的动画，他开始动画的时间和他父动画一样，并且继承父动画的时间，时间曲线和其他动画配置。
可以通过<code>overrideInheritedDuration</code>、<code>overrideInheritedCurve</code> 来使用自己的配置做动画</p>

<h3>转场动画 (动画效果比较浮夸，用的较少)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="k">func</span> <span class="n">transition</span><span class="p">(</span><span class="n">with</span> <span class="nl">view</span><span class="p">:</span> <span class="bp">UIView</span><span class="p">,</span> <span class="nl">duration</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="n">UIViewAnimationOptions</span> <span class="o">=</span> <span class="p">[],</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">(()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span><span class="o">?</span><span class="p">,</span> <span class="nl">completion</span><span class="p">:</span> <span class="p">((</span><span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在<code>view</code>中进行转场动画</li>
<li>在<code>animations</code>中可以add、remove、hide、show view，如果想要其他动画效果，需要配置<code>allowAnimatedContent</code></li>
</ul>


<figure class='code'><figcaption><span>示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIView</span><span class="p">.</span><span class="n">transition</span><span class="p">(</span><span class="nl">with</span><span class="p">:</span> <span class="n">redView</span><span class="p">,</span> <span class="nl">duration</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">.</span><span class="n">transitionFlipFromLeft</span><span class="p">,</span> <span class="nl">animations</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="n">blueView</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'>        <span class="p">},</span> <span class="nl">completion</span><span class="p">:</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="k">func</span> <span class="n">transition</span><span class="p">(</span><span class="n">from</span> <span class="nl">fromView</span><span class="p">:</span> <span class="bp">UIView</span><span class="p">,</span> <span class="n">to</span> <span class="nl">toView</span><span class="p">:</span> <span class="bp">UIView</span><span class="p">,</span> <span class="nl">duration</span><span class="p">:</span> <span class="n">TimeInterval</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="n">UIViewAnimationOptions</span> <span class="o">=</span> <span class="p">[],</span> <span class="nl">completion</span><span class="p">:</span> <span class="p">((</span><span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>这个方法，从<code>fromView</code>转场到<code>toView</code></li>
<li>系统实现是直接从视图层级中移除，可以使用 <code>showHideTransitionViews</code> 只是显示和隐藏两个view</li>
</ul>

]]></content>
  </entry>
  
</feed>
